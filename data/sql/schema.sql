CREATE TABLE entitlement (id BIGINT AUTO_INCREMENT, name VARCHAR(255), description text, uri VARCHAR(255), service_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX service_id_idx (service_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE entitlement_pack (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, service_id BIGINT NOT NULL, showorder BIGINT, description text, created_at DATETIME NOT NULL, type VARCHAR(255) NOT NULL, token text, INDEX service_id_idx (service_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE entitlement_pack_entitlement (id BIGINT AUTO_INCREMENT, entitlement_pack_id BIGINT NOT NULL, entitlement_id BIGINT NOT NULL, INDEX entitlement_pack_id_idx (entitlement_pack_id), INDEX entitlement_id_idx (entitlement_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE invitation (id BIGINT AUTO_INCREMENT, principal_id BIGINT, inviter_id BIGINT NOT NULL, email VARCHAR(255) NOT NULL, uuid VARCHAR(255) NOT NULL, status VARCHAR(255) NOT NULL, counter BIGINT NOT NULL, created_at DATETIME NOT NULL, accept_at DATETIME, last_reinvite_at DATETIME, organization_id BIGINT NOT NULL, role_id BIGINT, INDEX role_id_idx (role_id), INDEX principal_id_idx (principal_id), INDEX inviter_id_idx (inviter_id), INDEX organization_id_idx (organization_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE organization (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL UNIQUE, description text, default_role_id BIGINT, created_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE organization_entitlement_pack (id BIGINT AUTO_INCREMENT, organization_id BIGINT NOT NULL, entitlement_pack_id BIGINT NOT NULL, status VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, accept_at DATETIME, INDEX organization_id_idx (organization_id), INDEX entitlement_pack_id_idx (entitlement_pack_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE organization_principal (id BIGINT AUTO_INCREMENT, organization_id BIGINT NOT NULL, principal_id BIGINT NOT NULL, INDEX organization_id_idx (organization_id), INDEX principal_id_idx (principal_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE organization_service (id BIGINT AUTO_INCREMENT, organization_id BIGINT NOT NULL, service_id BIGINT NOT NULL, status VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, accept_at DATETIME, INDEX organization_id_idx (organization_id), INDEX service_id_idx (service_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE principal (id BIGINT AUTO_INCREMENT, fedid VARCHAR(255) NOT NULL UNIQUE, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE role (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, organization_id BIGINT NOT NULL, showorder BIGINT, description text, created_at DATETIME NOT NULL, INDEX organization_id_idx (organization_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE role_entitlement (id BIGINT AUTO_INCREMENT, role_id BIGINT NOT NULL, entitlement_id BIGINT NOT NULL, INDEX role_id_idx (role_id), INDEX entitlement_id_idx (entitlement_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE role_entitlement_pack (id BIGINT AUTO_INCREMENT, role_id BIGINT NOT NULL, entitlement_pack_id BIGINT NOT NULL, INDEX role_id_idx (role_id), INDEX entitlement_pack_id_idx (entitlement_pack_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE role_principal (id BIGINT AUTO_INCREMENT, role_id BIGINT NOT NULL, principal_id BIGINT NOT NULL, expiration DATETIME, INDEX role_id_idx (role_id), INDEX principal_id_idx (principal_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE service (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, entityid VARCHAR(255), url VARCHAR(255), description text, principal_id BIGINT NOT NULL, type VARCHAR(255) NOT NULL, token text, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX principal_id_idx (principal_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE service_invitation (id BIGINT AUTO_INCREMENT, principal_id BIGINT, inviter_id BIGINT NOT NULL, email VARCHAR(255) NOT NULL, uuid VARCHAR(255) NOT NULL, status VARCHAR(255) NOT NULL, counter BIGINT NOT NULL, created_at DATETIME NOT NULL, accept_at DATETIME, last_reinvite_at DATETIME, service_id BIGINT NOT NULL, INDEX principal_id_idx (principal_id), INDEX inviter_id_idx (inviter_id), INDEX service_id_idx (service_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE service_principal (id BIGINT AUTO_INCREMENT, service_id BIGINT NOT NULL, principal_id BIGINT NOT NULL, INDEX service_id_idx (service_id), INDEX principal_id_idx (principal_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE entitlement ADD CONSTRAINT entitlement_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id) ON DELETE CASCADE;
ALTER TABLE entitlement_pack ADD CONSTRAINT entitlement_pack_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id) ON DELETE CASCADE;
ALTER TABLE entitlement_pack_entitlement ADD CONSTRAINT entitlement_pack_entitlement_entitlement_id_entitlement_id FOREIGN KEY (entitlement_id) REFERENCES entitlement(id) ON DELETE CASCADE;
ALTER TABLE entitlement_pack_entitlement ADD CONSTRAINT eeei FOREIGN KEY (entitlement_pack_id) REFERENCES entitlement_pack(id) ON DELETE CASCADE;
ALTER TABLE invitation ADD CONSTRAINT invitation_role_id_role_id FOREIGN KEY (role_id) REFERENCES role(id);
ALTER TABLE invitation ADD CONSTRAINT invitation_principal_id_principal_id FOREIGN KEY (principal_id) REFERENCES principal(id);
ALTER TABLE invitation ADD CONSTRAINT invitation_organization_id_organization_id FOREIGN KEY (organization_id) REFERENCES organization(id);
ALTER TABLE invitation ADD CONSTRAINT invitation_inviter_id_principal_id FOREIGN KEY (inviter_id) REFERENCES principal(id);
ALTER TABLE organization_entitlement_pack ADD CONSTRAINT organization_entitlement_pack_organization_id_organization_id FOREIGN KEY (organization_id) REFERENCES organization(id) ON DELETE CASCADE;
ALTER TABLE organization_entitlement_pack ADD CONSTRAINT oeei FOREIGN KEY (entitlement_pack_id) REFERENCES entitlement_pack(id) ON DELETE CASCADE;
ALTER TABLE organization_principal ADD CONSTRAINT organization_principal_principal_id_principal_id FOREIGN KEY (principal_id) REFERENCES principal(id) ON DELETE CASCADE;
ALTER TABLE organization_principal ADD CONSTRAINT organization_principal_organization_id_organization_id FOREIGN KEY (organization_id) REFERENCES organization(id) ON DELETE CASCADE;
ALTER TABLE organization_service ADD CONSTRAINT organization_service_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id);
ALTER TABLE organization_service ADD CONSTRAINT organization_service_organization_id_organization_id FOREIGN KEY (organization_id) REFERENCES organization(id);
ALTER TABLE role ADD CONSTRAINT role_organization_id_organization_id FOREIGN KEY (organization_id) REFERENCES organization(id) ON DELETE CASCADE;
ALTER TABLE role_entitlement ADD CONSTRAINT role_entitlement_role_id_role_id FOREIGN KEY (role_id) REFERENCES role(id) ON DELETE CASCADE;
ALTER TABLE role_entitlement ADD CONSTRAINT role_entitlement_entitlement_id_entitlement_id FOREIGN KEY (entitlement_id) REFERENCES entitlement(id) ON DELETE CASCADE;
ALTER TABLE role_entitlement_pack ADD CONSTRAINT role_entitlement_pack_role_id_role_id FOREIGN KEY (role_id) REFERENCES role(id) ON DELETE CASCADE;
ALTER TABLE role_entitlement_pack ADD CONSTRAINT role_entitlement_pack_entitlement_pack_id_entitlement_pack_id FOREIGN KEY (entitlement_pack_id) REFERENCES entitlement_pack(id) ON DELETE CASCADE;
ALTER TABLE role_principal ADD CONSTRAINT role_principal_role_id_role_id FOREIGN KEY (role_id) REFERENCES role(id) ON DELETE CASCADE;
ALTER TABLE role_principal ADD CONSTRAINT role_principal_principal_id_principal_id FOREIGN KEY (principal_id) REFERENCES principal(id) ON DELETE CASCADE;
ALTER TABLE service ADD CONSTRAINT service_principal_id_principal_id FOREIGN KEY (principal_id) REFERENCES principal(id);
ALTER TABLE service_invitation ADD CONSTRAINT service_invitation_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id);
ALTER TABLE service_invitation ADD CONSTRAINT service_invitation_principal_id_principal_id FOREIGN KEY (principal_id) REFERENCES principal(id);
ALTER TABLE service_invitation ADD CONSTRAINT service_invitation_inviter_id_principal_id FOREIGN KEY (inviter_id) REFERENCES principal(id);
ALTER TABLE service_principal ADD CONSTRAINT service_principal_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id) ON DELETE CASCADE;
ALTER TABLE service_principal ADD CONSTRAINT service_principal_principal_id_principal_id FOREIGN KEY (principal_id) REFERENCES principal(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
