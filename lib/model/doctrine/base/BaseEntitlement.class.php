<?php

/**
 * BaseEntitlement
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property text $description
 * @property string $uri
 * @property integer $service_id
 * @property Service $Service
 * @property Doctrine_Collection $Role
 * @property Doctrine_Collection $RoleEntitlement
 * @property Doctrine_Collection $EntitlementPack
 * @property Doctrine_Collection $EntitlementPackEntitlement
 * 
 * @method integer             getId()                         Returns the current record's "id" value
 * @method string              getName()                       Returns the current record's "name" value
 * @method text                getDescription()                Returns the current record's "description" value
 * @method string              getUri()                        Returns the current record's "uri" value
 * @method integer             getServiceId()                  Returns the current record's "service_id" value
 * @method Service             getService()                    Returns the current record's "Service" value
 * @method Doctrine_Collection getRole()                       Returns the current record's "Role" collection
 * @method Doctrine_Collection getRoleEntitlement()            Returns the current record's "RoleEntitlement" collection
 * @method Doctrine_Collection getEntitlementPack()            Returns the current record's "EntitlementPack" collection
 * @method Doctrine_Collection getEntitlementPackEntitlement() Returns the current record's "EntitlementPackEntitlement" collection
 * @method Entitlement         setId()                         Sets the current record's "id" value
 * @method Entitlement         setName()                       Sets the current record's "name" value
 * @method Entitlement         setDescription()                Sets the current record's "description" value
 * @method Entitlement         setUri()                        Sets the current record's "uri" value
 * @method Entitlement         setServiceId()                  Sets the current record's "service_id" value
 * @method Entitlement         setService()                    Sets the current record's "Service" value
 * @method Entitlement         setRole()                       Sets the current record's "Role" collection
 * @method Entitlement         setRoleEntitlement()            Sets the current record's "RoleEntitlement" collection
 * @method Entitlement         setEntitlementPack()            Sets the current record's "EntitlementPack" collection
 * @method Entitlement         setEntitlementPackEntitlement() Sets the current record's "EntitlementPackEntitlement" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     gyufi@sztaki.hu
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEntitlement extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('entitlement');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('uri', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('service_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Service', array(
             'local' => 'service_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Role', array(
             'refClass' => 'RoleEntitlement',
             'local' => 'entitlement_id',
             'foreign' => 'role_id'));

        $this->hasMany('RoleEntitlement', array(
             'local' => 'id',
             'foreign' => 'entitlement_id'));

        $this->hasMany('EntitlementPack', array(
             'refClass' => 'EntitlementPackEntitlement',
             'local' => 'entitlement_id',
             'foreign' => 'entitlement_pack_id'));

        $this->hasMany('EntitlementPackEntitlement', array(
             'local' => 'id',
             'foreign' => 'entitlement_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}