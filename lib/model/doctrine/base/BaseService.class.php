<?php

/**
 * BaseService
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $entityId
 * @property string $url
 * @property text $description
 * @property integer $principal_id
 * @property enum $type
 * @property text $token
 * @property Doctrine_Collection $Organization
 * @property Principal $Principal
 * @property Doctrine_Collection $ServicePrincipal
 * @property Doctrine_Collection $OrganizationService
 * @property Doctrine_Collection $Entitlement
 * @property Doctrine_Collection $EntitlementPack
 * @property Doctrine_Collection $ServiceInvitation
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getName()                Returns the current record's "name" value
 * @method string              getEntityId()            Returns the current record's "entityId" value
 * @method string              getUrl()                 Returns the current record's "url" value
 * @method text                getDescription()         Returns the current record's "description" value
 * @method integer             getPrincipalId()         Returns the current record's "principal_id" value
 * @method enum                getType()                Returns the current record's "type" value
 * @method text                getToken()               Returns the current record's "token" value
 * @method Doctrine_Collection getOrganization()        Returns the current record's "Organization" collection
 * @method Principal           getPrincipal()           Returns the current record's "Principal" value
 * @method Doctrine_Collection getServicePrincipal()    Returns the current record's "ServicePrincipal" collection
 * @method Doctrine_Collection getOrganizationService() Returns the current record's "OrganizationService" collection
 * @method Doctrine_Collection getEntitlement()         Returns the current record's "Entitlement" collection
 * @method Doctrine_Collection getEntitlementPack()     Returns the current record's "EntitlementPack" collection
 * @method Doctrine_Collection getServiceInvitation()   Returns the current record's "ServiceInvitation" collection
 * @method Service             setId()                  Sets the current record's "id" value
 * @method Service             setName()                Sets the current record's "name" value
 * @method Service             setEntityId()            Sets the current record's "entityId" value
 * @method Service             setUrl()                 Sets the current record's "url" value
 * @method Service             setDescription()         Sets the current record's "description" value
 * @method Service             setPrincipalId()         Sets the current record's "principal_id" value
 * @method Service             setType()                Sets the current record's "type" value
 * @method Service             setToken()               Sets the current record's "token" value
 * @method Service             setOrganization()        Sets the current record's "Organization" collection
 * @method Service             setPrincipal()           Sets the current record's "Principal" value
 * @method Service             setServicePrincipal()    Sets the current record's "ServicePrincipal" collection
 * @method Service             setOrganizationService() Sets the current record's "OrganizationService" collection
 * @method Service             setEntitlement()         Sets the current record's "Entitlement" collection
 * @method Service             setEntitlementPack()     Sets the current record's "EntitlementPack" collection
 * @method Service             setServiceInvitation()   Sets the current record's "ServiceInvitation" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     gyufi@sztaki.hu
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseService extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('service');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('entityId', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('principal_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'pending',
              1 => 'valid',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('token', 'text', null, array(
             'type' => 'text',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Organization', array(
             'refClass' => 'OrganizationService',
             'local' => 'service_id',
             'foreign' => 'organization_id'));

        $this->hasOne('Principal', array(
             'local' => 'principal_id',
             'foreign' => 'id'));

        $this->hasMany('ServicePrincipal', array(
             'local' => 'id',
             'foreign' => 'service_id'));

        $this->hasMany('OrganizationService', array(
             'local' => 'id',
             'foreign' => 'service_id'));

        $this->hasMany('Entitlement', array(
             'local' => 'id',
             'foreign' => 'service_id'));

        $this->hasMany('EntitlementPack', array(
             'local' => 'id',
             'foreign' => 'service_id'));

        $this->hasMany('ServiceInvitation', array(
             'local' => 'id',
             'foreign' => 'service_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}