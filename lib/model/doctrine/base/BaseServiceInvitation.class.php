<?php

/**
 * BaseServiceInvitation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $principal_id
 * @property integer $inviter_id
 * @property string $email
 * @property string $uuid
 * @property enum $status
 * @property integer $counter
 * @property timestamp $created_at
 * @property timestamp $accept_at
 * @property timestamp $last_reinvite_at
 * @property integer $service_id
 * @property Principal $Principal
 * @property Principal $Inviter
 * @property Service $Service
 * 
 * @method integer           getId()               Returns the current record's "id" value
 * @method integer           getPrincipalId()      Returns the current record's "principal_id" value
 * @method integer           getInviterId()        Returns the current record's "inviter_id" value
 * @method string            getEmail()            Returns the current record's "email" value
 * @method string            getUuid()             Returns the current record's "uuid" value
 * @method enum              getStatus()           Returns the current record's "status" value
 * @method integer           getCounter()          Returns the current record's "counter" value
 * @method timestamp         getCreatedAt()        Returns the current record's "created_at" value
 * @method timestamp         getAcceptAt()         Returns the current record's "accept_at" value
 * @method timestamp         getLastReinviteAt()   Returns the current record's "last_reinvite_at" value
 * @method integer           getServiceId()        Returns the current record's "service_id" value
 * @method Principal         getPrincipal()        Returns the current record's "Principal" value
 * @method Principal         getInviter()          Returns the current record's "Inviter" value
 * @method Service           getService()          Returns the current record's "Service" value
 * @method ServiceInvitation setId()               Sets the current record's "id" value
 * @method ServiceInvitation setPrincipalId()      Sets the current record's "principal_id" value
 * @method ServiceInvitation setInviterId()        Sets the current record's "inviter_id" value
 * @method ServiceInvitation setEmail()            Sets the current record's "email" value
 * @method ServiceInvitation setUuid()             Sets the current record's "uuid" value
 * @method ServiceInvitation setStatus()           Sets the current record's "status" value
 * @method ServiceInvitation setCounter()          Sets the current record's "counter" value
 * @method ServiceInvitation setCreatedAt()        Sets the current record's "created_at" value
 * @method ServiceInvitation setAcceptAt()         Sets the current record's "accept_at" value
 * @method ServiceInvitation setLastReinviteAt()   Sets the current record's "last_reinvite_at" value
 * @method ServiceInvitation setServiceId()        Sets the current record's "service_id" value
 * @method ServiceInvitation setPrincipal()        Sets the current record's "Principal" value
 * @method ServiceInvitation setInviter()          Sets the current record's "Inviter" value
 * @method ServiceInvitation setService()          Sets the current record's "Service" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     gyufi@sztaki.hu
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseServiceInvitation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('service_invitation');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('principal_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('inviter_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('uuid', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'pending',
              1 => 'accepted',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('counter', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('accept_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('last_reinvite_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('service_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Principal', array(
             'local' => 'principal_id',
             'foreign' => 'id'));

        $this->hasOne('Principal as Inviter', array(
             'local' => 'inviter_id',
             'foreign' => 'id'));

        $this->hasOne('Service', array(
             'local' => 'service_id',
             'foreign' => 'id'));
    }
}