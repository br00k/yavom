<?php

/**
 * Principal
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Principal extends BasePrincipal
{
  public function __toString()
  {
    return $this->getFedid();
  }

  /**
  *  Ha strict, akkor csak a menedzselteket adja vissza.
  *  Ha nem strict, akkor csak a NEM menedzselteket adja vissza.
  */
  public function getRelatedOrganizations($strict = FALSE)
  {
    if ($strict)
    {
      $os = $this->getOrganization();
    }
    else
    {
      $os = array();
      foreach( $this->getInvitation() as $i)
      {
        if (! $i->getOrganization()->amIManager())
        {
          $os[] = $i->getOrganization();
        }
      }
    }
    return $os;
  }

  public function getAllRelatedOrganizations()
  {
    $os = array();
    foreach( $this->getInvitation() as $i)
    {
      if ($i->getStatus() == 'accepted')
      {
        $os[$i->getOrganizationId()] = $i->getOrganization();
      }
    }
    return $os;
  }
  
  public function getServices(){
    $q = Doctrine_Query::create()
                        ->from('Service s')
                        ->leftJoin('s.ServicePrincipal sp')
                        ->where('sp.principal_id = ?', $this->getId())->execute();
    return $q;
  }

  public function getUser()
  {
    $u = Doctrine::getTable('sfGuardUser')->findOneByUsername($this->getFedid());
    if ($u)
      return $u;
    return false;
  }
  
  public function getEmail()
  {
    if ($this->getUser())
      return $this->getUser()->getEmailAddress();
    return false;
  }

  public function getName()
  {
    if ($this->getUser())
      return $this->getUser()->getLastName();
    return false;
  }

  public function hasRoleAt($o)
  {
    foreach($this->getRole() as $r)
    {
      foreach($o->getRole() as $or)
      {
        if ($or->getId() == $r->getId()) return TRUE;
      }
    }
    return false;
  }
}
