<?php

/**
 * BaseOrganization
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property text $description
 * @property integer $default_role_id
 * @property timestamp $created_at
 * @property Doctrine_Collection $Principal
 * @property Doctrine_Collection $Service
 * @property Doctrine_Collection $Role
 * @property Doctrine_Collection $OrganizationPrincipal
 * @property Doctrine_Collection $OrganizationEntitlementPack
 * @property Doctrine_Collection $OrganizationService
 * @property Doctrine_Collection $Invitation
 * 
 * @method integer             getId()                          Returns the current record's "id" value
 * @method string              getName()                        Returns the current record's "name" value
 * @method text                getDescription()                 Returns the current record's "description" value
 * @method integer             getDefaultRoleId()               Returns the current record's "default_role_id" value
 * @method timestamp           getCreatedAt()                   Returns the current record's "created_at" value
 * @method Doctrine_Collection getPrincipal()                   Returns the current record's "Principal" collection
 * @method Doctrine_Collection getService()                     Returns the current record's "Service" collection
 * @method Doctrine_Collection getRole()                        Returns the current record's "Role" collection
 * @method Doctrine_Collection getOrganizationPrincipal()       Returns the current record's "OrganizationPrincipal" collection
 * @method Doctrine_Collection getOrganizationEntitlementPack() Returns the current record's "OrganizationEntitlementPack" collection
 * @method Doctrine_Collection getOrganizationService()         Returns the current record's "OrganizationService" collection
 * @method Doctrine_Collection getInvitation()                  Returns the current record's "Invitation" collection
 * @method Organization        setId()                          Sets the current record's "id" value
 * @method Organization        setName()                        Sets the current record's "name" value
 * @method Organization        setDescription()                 Sets the current record's "description" value
 * @method Organization        setDefaultRoleId()               Sets the current record's "default_role_id" value
 * @method Organization        setCreatedAt()                   Sets the current record's "created_at" value
 * @method Organization        setPrincipal()                   Sets the current record's "Principal" collection
 * @method Organization        setService()                     Sets the current record's "Service" collection
 * @method Organization        setRole()                        Sets the current record's "Role" collection
 * @method Organization        setOrganizationPrincipal()       Sets the current record's "OrganizationPrincipal" collection
 * @method Organization        setOrganizationEntitlementPack() Sets the current record's "OrganizationEntitlementPack" collection
 * @method Organization        setOrganizationService()         Sets the current record's "OrganizationService" collection
 * @method Organization        setInvitation()                  Sets the current record's "Invitation" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     gyufi@sztaki.hu
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrganization extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('organization');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('default_role_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Principal', array(
             'refClass' => 'OrganizationPrincipal',
             'local' => 'organization_id',
             'foreign' => 'principal_id'));

        $this->hasMany('Service', array(
             'refClass' => 'OrganizationService',
             'local' => 'organization_id',
             'foreign' => 'service_id'));

        $this->hasMany('Role', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('OrganizationPrincipal', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('OrganizationEntitlementPack', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('OrganizationService', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('Invitation', array(
             'local' => 'id',
             'foreign' => 'organization_id'));
    }
}