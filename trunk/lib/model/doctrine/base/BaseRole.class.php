<?php

/**
 * BaseRole
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $organization_id
 * @property integer $showorder
 * @property text $description
 * @property timestamp $created_at
 * @property Organization $Organization
 * @property Doctrine_Collection $Principal
 * @property Doctrine_Collection $Entitlement
 * @property Doctrine_Collection $RolePrincipal
 * @property Doctrine_Collection $RoleEntitlement
 * @property Doctrine_Collection $Invitation
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method integer             getOrganizationId()  Returns the current record's "organization_id" value
 * @method integer             getShoworder()       Returns the current record's "showorder" value
 * @method text                getDescription()     Returns the current record's "description" value
 * @method timestamp           getCreatedAt()       Returns the current record's "created_at" value
 * @method Organization        getOrganization()    Returns the current record's "Organization" value
 * @method Doctrine_Collection getPrincipal()       Returns the current record's "Principal" collection
 * @method Doctrine_Collection getEntitlement()     Returns the current record's "Entitlement" collection
 * @method Doctrine_Collection getRolePrincipal()   Returns the current record's "RolePrincipal" collection
 * @method Doctrine_Collection getRoleEntitlement() Returns the current record's "RoleEntitlement" collection
 * @method Doctrine_Collection getInvitation()      Returns the current record's "Invitation" collection
 * @method Role                setId()              Sets the current record's "id" value
 * @method Role                setName()            Sets the current record's "name" value
 * @method Role                setOrganizationId()  Sets the current record's "organization_id" value
 * @method Role                setShoworder()       Sets the current record's "showorder" value
 * @method Role                setDescription()     Sets the current record's "description" value
 * @method Role                setCreatedAt()       Sets the current record's "created_at" value
 * @method Role                setOrganization()    Sets the current record's "Organization" value
 * @method Role                setPrincipal()       Sets the current record's "Principal" collection
 * @method Role                setEntitlement()     Sets the current record's "Entitlement" collection
 * @method Role                setRolePrincipal()   Sets the current record's "RolePrincipal" collection
 * @method Role                setRoleEntitlement() Sets the current record's "RoleEntitlement" collection
 * @method Role                setInvitation()      Sets the current record's "Invitation" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     gyufi@sztaki.hu
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRole extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('role');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('organization_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('showorder', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));

        $this->option('orderBy', 'showorder');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Organization', array(
             'local' => 'organization_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Principal', array(
             'refClass' => 'RolePrincipal',
             'local' => 'role_id',
             'foreign' => 'principal_id'));

        $this->hasMany('Entitlement', array(
             'refClass' => 'RoleEntitlement',
             'local' => 'role_id',
             'foreign' => 'entitlement_id'));

        $this->hasMany('RolePrincipal', array(
             'local' => 'id',
             'foreign' => 'role_id'));

        $this->hasMany('RoleEntitlement', array(
             'local' => 'id',
             'foreign' => 'role_id'));

        $this->hasMany('Invitation', array(
             'local' => 'id',
             'foreign' => 'role_id'));
    }
}